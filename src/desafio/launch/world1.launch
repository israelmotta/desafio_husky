<?xml version="1.0"?>
<launch>

	<arg name="laser_enabled" default="false"/>
  <arg name="kinect_enabled" default="false"/>

	<!-- <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find desafio)/model"/>
  	<env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find desafio)/model"/> -->


  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  
  <arg name="urdf_extras"         default="$(find desafio)/urdf/teste.xacro"/>
  
  <include file="$(find bir_cimatec4_map)/launch/gazebo.launch">
    <!-- <arg name="world_name" value="$(arg world_name)"/>  -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value= "false"/>
  </include>

  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
      <arg name="laser_enabled" value="$(arg laser_enabled)"/>
      <arg name="kinect_enabled" value="$(arg kinect_enabled)"/>
      <arg name="urdf_extras" value="$(arg urdf_extras)"/>
      <arg name="x"                 value="49"/>
      <arg name="y"                 value="10"/>
      <arg name="z"                 value="0"/>
      <arg name="yaw"               value="3.14159265359"/>

  </include>

  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in" to="/velodyne_points"/>
        <rosparam>
            target_frame: velodyne # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: -0.45 <!---0.4-->
            <!-- max_height: 1.0 -->
            <!-- angle_min: -1.5708 # -M_PI/2
            angle_max: 1.5708 # M_PI/2
            angle_increment: 0.0087 # M_PI/360.0
            scan_time: 0.3333
            range_min: 0.45
            range_max: 50.0
            use_inf: true
            inf_epsilon: 1.0 -->
            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 0
        </rosparam>
  </node>


  <!-- <node pkg="gazebo_light_sensor_plugin" name="opencv_camera" type="vision.py" output="screen" /> -->
  <!-- <node pkg="gazebo_light_sensor_plugin" name="robot_vision" type="controlvision.py" output="screen" /> -->

</launch>
